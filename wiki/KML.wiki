#summary KML handling in OSMBonusPack - details about what is supported and what is not.

<wiki:toc max_depth="2" />

= Introduction =

OSMBonusPack implements a subset of KML features. 

From an end-user point of view: 
 * When using Google Maps Engine LITE (the Google Maps Web interface to create personal maps), anything you can create as KML will be supported. 
 * But if you created your KML content with advanced tools like Google Earth or ArcGIS, find below the details about what is supported - and what is not. 


If there is an unsupported feature that is key for you, don't hesitate to create an Issue in the Issues tab, explaining your need. We will see if we can add it to the roadmap. 


= Details =

This explanation assumes you know KML concepts. 
See the [https://developers.google.com/kml/documentation/kmlreference KML Reference] if necessary. 

== Supported objects ==

Supported objects are:
 * Features: Document, Folder, NetworkLink, Placemark
 * Geometry: Point, LineString, Polygon
 * Style
 * ColorStyle: LineStyle, PolyStyle, IconStyle

Unsupported objects are just ignored, without raising an error. 

== Feature ==
For all supported *Feature*, supported attributes/elements are:
 * id
 * name
 * description - with no warranty about what happens if you put HTML, JavaScript or CSS inside. 
 * visibility
 * open
 * styleUrl: references to external files are not handled. 
 * ExtendedData: see restrictions below. 

== Document ==
Document is loaded and then handled as a Folder. 
When saving, the root folder is saved as a Document. 

== !NetworkLink ==
NetworkLink is handled at loading, but converted to a regular Folder. The content of the related file is completely integrated into the folder hierarchy: the link information is lost, styles of both files are merged. 

Supported Link elements: 
 * href: only full HTTP addresses are supported (no local file, no relative path). 

== Geometry ==
For all supported *Geometry*: 
 * extrude, altitudeMode and tesselate (everything related to 3D display) are not supported. Altitude is kept as is. 


== Polygon ==
 * innerBoundaryIs (holes) are not supported. 

== Style ==
Inline styles are supported at loading, and converted to shared styles. 

== !IconStyle ==
 * href: only full HTTP addresses are supported (no local file, no relative path). 
 * heading is not supported. 
 * hotSpot is not supported. Hotspot will always be bottom-center. 

== !PolyStyle ==
 * fill and outline are not supported. Polyline is always filled and outlined. 

==  !LineStyle ==
None of "gx:" elements are supported. 

== !ExtendedData ==
 * *Data* are supported, with their name and value. displayName is not handled. 
 * *SimpleData* are supported, but with no handling of SchemaData, and no control of the Schema: all values are handled as Java Strings. When saving, they will be saved as Data. 
 * There is no support for ExtendedData using other namespaces. 

== Other aspects ==

KMZ files are not supported. But you can easily convert between KML and KMZ with Android zip APIs (ZipFile, ZipInputStream,...). 


= Limits =

There is no hard-coded limit in the lib, for instance on the number of folders, levels of folders, number of placemarks, number of coordinates, and so on. 
So the only technical limit is the memory heap. 

Unfortunately, on Android, the memory heap available to an application is ridiculously small: something between 20Mb and 50Mb - when it is usually above 1Gb on a PC. 
And as OSMBonusPack handles KML entirely in memory, memory is the real limit. 

In practice, you can reasonnably plan to manipulate KML files up to 1Mb (loading, displaying, editing, saving). 
But with a 10Mb file, you will certainly encounter crashes due to OutOfMemory exceptions. 
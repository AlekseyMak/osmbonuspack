#summary BonusPack Tutorial #3: KML content.

= 10. Using KML content =

[http://en.wikipedia.org/wiki/Keyhole_Markup_Language KML] is a de-facto standard for handling overlays on maps, from a simple list of markers, to complex structures. 

Both Google Maps and Bing Maps allow people to create their "personal maps" by putting markers, lines and polygons. Such personal maps can be exported as KML content. 
More advanced tools can be used to create and display KML content, like Google Earth or ArcGIS Explorer. 

OSMBonusPack provides the basic toolbox to handle KML content. 

Let see it in action. I have a Url to a KML file, and I want to show it on my OSM map. 

(Parenthesis - If you don't have such Url, pick one of those:
 * Paris Tour: http://mapsengine.google.com/map/kml?mid=z6IJfj90QEd4.kUUY9FoHFRdE
 * A route in Netherlands: http://www.yournavigation.org/api/1.0/gosmore.php?format=kml&flat=52.215676&flon=5.963946&tlat=52.2573&tlon=6.1799
End of parenthesis)

First, create a FolderOverlay, and add it on your map:
{{{
kmlOverlay = new FolderOverlay(this);
map.getOverlays().add(kmlOverlay);
}}}

This FolderOverlay will be the container of all overlays found in the KML file. 

Create a KmlProvider, the helper object that will do KML reading and parsing:
{{{
KmlProvider kmlProvider = new KmlProvider();
}}}

Read your KML content: 
{{{
Document kmlDoc = kmlProvider.getKml(uri);
}}}

Set a default icon for all markers:
{{{
Drawable defaultMarker = getResources().getDrawable(R.drawable.marker_kml_point);
}}}

And parse the KML document to build the overlays inside the folder overlay: 
{{{
Element kmlRoot = kmlDoc.getDocumentElement();
kmlProvider.buildOverlays(kmlRoot, kmlOverlay, this, map, defaultMarker);
}}}

Then redraw your map view:
{{{
map.invalidate();
}}}

Now give this a try. You see nothing? Try to move your map to the right place. 

= Conclusion =